FILE: test.kt
    public final class Derived : R|Base| {
        public constructor(): R|Derived| {
            super<R|Base|>()
        }

        public final fun foo(): R|kotlin/Unit| {
            when () {
                ==(this@R|/Derived|.R|/Base.field|, Null(null)) ->  {
                    this@R|/Derived|.R|/Base.field| = String(Alpha)
                    this@R|/Derived|.R|/Base.field|.<Inapplicable(UNSAFE_CALL): kotlin/String.length>#
                }
            }

        }

    }
    public abstract interface First : R|kotlin/Any| {
    }
    public abstract interface Second : R|First| {
        public abstract val baz: R|Third|
            public get(): R|Third|

    }
    public abstract interface Third : R|First| {
        public abstract val s: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    public final fun bar(arg: R|First|): R|kotlin/Unit| {
        lvar v: R|First| = R|<local>/arg|
        when () {
            (R|<local>/v| is R|Second|) ->  {
                R|<local>/v| = R|<local>/v|.R|/Second.baz|
                R|<local>/v|.R|/Third.s|.R|kotlin/String.length|
            }
        }

    }

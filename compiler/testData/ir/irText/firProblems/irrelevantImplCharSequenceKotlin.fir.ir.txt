FILE fqName:<root> fileName:/irrelevantImplCharSequenceKotlin.kt
  CLASS CLASS name:AImpl modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.AImpl
    CONSTRUCTOR visibility:public <> () returnType:<root>.AImpl [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AImpl modality:ABSTRACT visibility:public superTypes:[kotlin.Any]'
    FUN name:charAt visibility:public modality:FINAL <> ($this:<root>.AImpl, index:kotlin.Int) returnType:kotlin.Char
      $this: VALUE_PARAMETER name:<this> type:<root>.AImpl
      VALUE_PARAMETER name:index index:0 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun charAt (index: kotlin.Int): kotlin.Char declared in <root>.AImpl'
          CONST Char type=kotlin.Char value='A'
    FUN name:length visibility:public modality:FINAL <> ($this:<root>.AImpl) returnType:kotlin.Int
      $this: VALUE_PARAMETER name:<this> type:<root>.AImpl
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun length (): kotlin.Int declared in <root>.AImpl'
          CONST Int type=kotlin.Int value=56
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:X modality:FINAL visibility:public superTypes:[<root>.J.A]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.X
    CONSTRUCTOR visibility:public <> () returnType:<root>.X [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.J.A'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:X modality:FINAL visibility:public superTypes:[<root>.J.A]'
    FUN FAKE_OVERRIDE name:subSequence visibility:public modality:OPEN <> ($this:<root>.J.A, start:kotlin.Int, end:kotlin.Int) returnType:@[EnhancedNullability] kotlin.CharSequence [fake_override]
      overridden:
        public open fun subSequence (start: kotlin.Int, end: kotlin.Int): @[EnhancedNullability] kotlin.CharSequence declared in <root>.J.A
      $this: VALUE_PARAMETER name:<this> type:<root>.J.A
      VALUE_PARAMETER name:start index:0 type:kotlin.Int
      VALUE_PARAMETER name:end index:1 type:kotlin.Int
    PROPERTY FAKE_OVERRIDE name:length visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract length: kotlin.Int [fake_override,val]
      FUN FAKE_OVERRIDE name:<get-length> visibility:public modality:ABSTRACT <> ($this:kotlin.CharSequence) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:length visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-length> (): kotlin.Int [fake_override] declared in <root>.J.A
        $this: VALUE_PARAMETER name:<this> type:kotlin.CharSequence
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.J.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.J.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.J.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:Y modality:FINAL visibility:public superTypes:[<root>.J.B]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Y
    CONSTRUCTOR visibility:public <> () returnType:<root>.Y [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.J.B'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Y modality:FINAL visibility:public superTypes:[<root>.J.B]'
    FUN FAKE_OVERRIDE name:subSequence visibility:public modality:OPEN <> ($this:<root>.J.B, start:kotlin.Int, end:kotlin.Int) returnType:@[EnhancedNullability] kotlin.CharSequence [fake_override]
      overridden:
        public open fun subSequence (start: kotlin.Int, end: kotlin.Int): @[EnhancedNullability] kotlin.CharSequence declared in <root>.J.B
      $this: VALUE_PARAMETER name:<this> type:<root>.J.B
      VALUE_PARAMETER name:start index:0 type:kotlin.Int
      VALUE_PARAMETER name:end index:1 type:kotlin.Int
    PROPERTY FAKE_OVERRIDE name:length visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open length: kotlin.Int [val]
      FUN FAKE_OVERRIDE name:<get-length> visibility:public modality:OPEN <> ($this:<root>.J.B) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:length visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-length> (): kotlin.Int declared in <root>.J.B
        $this: VALUE_PARAMETER name:<this> type:<root>.J.B
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.J.B
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.J.B
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.J.B
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:get visibility:public modality:OPEN <> ($this:<root>.J.B, index:kotlin.Int) returnType:kotlin.Char [fake_override,operator]
      overridden:
        public open fun get (index: kotlin.Int): kotlin.Char [operator] declared in <root>.J.B
      $this: VALUE_PARAMETER name:<this> type:<root>.J.B
      VALUE_PARAMETER name:index index:0 type:kotlin.Int
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:x type:<root>.X [val]
        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.X' type=<root>.X origin=null
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
            $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public abstract fun <get-length> (): kotlin.Int [fake_override] declared in <root>.X' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val x: <root>.X [val] declared in <root>.box' type=<root>.X origin=null
              arg1: CONST Int type=kotlin.Int value=56
          then: RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
            CONST String type=kotlin.String value="fail 1"
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
            $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun get (index: kotlin.Int): kotlin.Char [operator] declared in <root>.AImpl' type=kotlin.Char origin=null
                $this: GET_VAR 'val x: <root>.X [val] declared in <root>.box' type=<root>.X origin=null
                index: CONST Int type=kotlin.Int value=0
              arg1: CONST Char type=kotlin.Char value='A'
          then: RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
            CONST String type=kotlin.String value="fail 2"
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
